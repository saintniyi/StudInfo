@model StudInfoModel.ViewModels.EnrollmentVM

@{
    ViewData["Title"] = "Add Score";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="border col-10 p-3 mt-3 text-center">

    <form method="post">

        <div class="row mb-6">
            <h2>Enroll Courses</h2>
        </div>

        <div class="row">
            <div class="mb-2 col-6">
                <label asp-for="Enrollment.StudNos"></label>
                <input asp-for="Enrollment.StudNos" id="txtStudNos" name="txtStudNos" class="form-control" />
                <span asp-validation-for="Enrollment.StudNos" class="text-danger"></span>
            </div>
            <div class="mb-3 col-6">
                <label asp-for="Enrollment.Level"></label>
                <select asp-for="Enrollment.Level" id="ddlLevel" name="ddlLevel" class="form-select"></select>
                <span asp-validation-for="Enrollment.Level" class="text-danger"></span>
            </div>
            <div class="mb-2 col-6">
                <label asp-for="Enrollment.Semester"></label>
                <select asp-for="Enrollment.Semester" id="ddlSemester" name="ddlSemester" class="form-select"></select>
                <span asp-validation-for="Enrollment.Semester" class="text-danger"></span>
            </div>

            <div class="mt-4 col-6 text-end">
                <button type="button" id="btnFind" class="btn btn-primary" style="width:150px;">Find</button>
                <button type="button" id="btnSet" hidden class="btn btn-primary" style="width:150px;">Set Value</button>
            </div>

        </div>

        <div>
            <br /><br />
            <table id="myTable" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Course Code</th>
                    </tr>
                </thead>

                <tbody>
                </tbody>

            </table>
        </div>

        <div class="mt-3 text-end">
            <button type="button" id="btnSave" onclick="Save()" class="btn btn-primary" style="width:150px;">Save</button>
        </div>

    </form>

</div>

<script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script>


    $(document).ready(function() {

        ddlLevel = $('#ddlLevel')
        ddlSemester = $('#ddlSemester')

        loadDropDowns(ddlLevel, "/Enrollment/LoadLevels")
        loadDropDowns(ddlSemester, "/Enrollment/LoadSemesters")

        //$('#btnFind').click(function() {
        //    Find();
        //    setTableValue()
        //})

        

    })


     $(function () {
            $('[id*=btnFind]').on('click', function () {
                // do you stuff of button 1 click
                Find();
                //alert('here1')
                setTimeout(function () {
                    $('[id*=btnSet]').trigger('click');
                }, 500);
            });
 
            $('[id*=btnSet]').on('click', function () {
                // do stuff of button2 click
                //alert('here2')
                setTableValue();
                //alert('here3')
            });
        });

  


    function loadDropDowns(ddl, dataUrl) {

        $.ajax({
            type: "POST",
            url: dataUrl,
            success: function(data) {
                ddl.empty()
                $.each(data, function() {
                    ddl.append($("<option></option>").val(this['value']).html(this['text']));
                    //ddl.append($("<option />").text(this.value).text(this.text));
                });
            }
        })

    }



    function addNewRow() {

        var row = `
                    <tr>
                        <td><select id="ddlCourseCode" name="ddlCourseCode" class="form-select"></select></td>
                    </tr>
                `

        $("#myTable tbody").append(row);

        PopulateCourseCodeByRow()
    }


    function PopulateCourseCodeByRow() {

        //var id = '@(ViewBag.id)'

        $('#myTable tbody tr').each(function(row, ele) {

            let ddlCourseCode = $(this).find('select[id=ddlCourseCode]')

            loadDropDowns(ddlCourseCode, "/Enrollment/LoadCourses")

        });
    }



    //global variables
    var gStudNos = ''
    var gLevel = ''
    var gSemester = ''
    var tempData;

    function Find() {

        //assign value in global variables in case textbox or dropdown values has been changed before saving
        let txtStudNos = $('#txtStudNos').val()
        let ddlLevel = $('#ddlLevel').val()
        let ddlSemester = $('#ddlSemester').val()

        gStudNos = txtStudNos
        gLevel = ddlLevel
        gSemester = ddlSemester

        //call server method for the search from the client
        $.ajax({
            type: "GET",
            url: "@Url.Action("SearchEnrollmentFromClient")",   //"/Score/SearchEnrollmentFromClient",
            data: { stdnos: txtStudNos, level: ddlLevel, semester: ddlSemester },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(data) {

                tempData = data;

                $.each(data, function() {
                    addNewRow();
                })

                //setTableValue()
            }
        })
    }


    function setTableValue() {
        $('#myTable tbody tr').each(function(i, ele) {
            let ddlCourseCode = $(this).find('select[id=ddlCourseCode] option[value="' + tempData[i].courseCode + '"]')
            ddlCourseCode.attr('selected', 'selected')
        });
    }



    //function Find() {

    //   FIND METHOD USING MAP FUNCTION INSTEAD OF $.each() APPROACH

    //    let txtStudNos = $('#txtStudNos').val()
    //    let ddlLevel = $('#ddlLevel').val()
    //    let ddlSemester = $('#ddlSemester').val()
    //    //alert(txtStudNos + ' - ' + ddlLevel + ' - ' + ddlSemester)

    //    //call server method for the search from the client
    //    $.ajax({
    //        type: "GET",
    //        url: "@Url.Action("SearchFromClient")",   //"/Score/SearchFromClient",
    //        data: { stdnos: txtStudNos, level: ddlLevel, semester: ddlSemester },
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "json",
    //        success: function(data) {

    //            tabRow = ''
    //            var tabRows = data.map(i => "<tr><td>" + i.studNos + "</td><td>" + i.courseCode + "</td><td><input type='text' id='txtMark' name='txtMark' class='form-control' value='' /></td>");
    //            $("#myTable").html(tabRows);
    //            $('#myTable').append(tabRows);

    //            //or

    //            //tabRows = data.map(getAllRows)
    //            //$('#myTable').append(tabRows));

    //        }
    //    });

    //}


    //function getAllRows(rowItem) {
    //    row = "<tr><td>" + rowItem.studNos + "</td><td>" + rowItem.courseCode + "</td><td><input type='text' id='txtMark' name='txtMark' class='form-control' value='' /></td>";
    //    return row
    //}



    function Save() {

        scores = [];

        $('#myTable tbody tr').each(function(row, ele) {

            var score = {}
            let td = $(this).find('td')

            let grpCode = td.eq(0).text()
            score.GroupCode = grpCode

            let cCode = td.eq(1).text()
            score.CourseCode = cCode

            let mark = td.eq(2).find('input[name=txtMark]').val()
            //or
            //let mark = $(this).find("td:eq(2) input[type='text']").val();
            score.Mark = mark

            score.StudNos = gStudNos
            score.Level = gLevel
            score.Semester = gSemester

            //alert(grpCode + ' - ' + cCode + ' - ' + mark + ' - ' + gStudNos + ' - ' + gLevel + ' - ' + gSemester)

            if (grpCode == '' || cCode == '' || mark == '' || gStudNos == '' || gLevel == '' || gSemester == '') {
                return true
            }

            scores.push(score)

        });

        //remove value from global variables
        gStudio = gLevel = gSemester = ''

        if (JSON.stringify(scores) === '[]') {
            toastr.error('An error has ocurred. Please contact the administrator')
            return;
        }

        //assign scores array to Enrollments property of the enrollmentVM object
        var scoreVM = {};
        scoreVM.Scores = scores;

        //send scoreVM object to server
        sendArrayToServer(scoreVM)
    }




    function sendArrayToServer(sVM) {
        //alert(JSON.stringify(sVM))
        $.ajax({
            type: "POST",
            url: "/Score/SaveScores",
            data: JSON.stringify(sVM),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function(r) {
                toastr.success(r + " records successfully saved")
            }
        });
    }


</script>